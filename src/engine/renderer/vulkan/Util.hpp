#ifndef ME_VULKAN_UTIL_HPP
  #define ME_VULKAN_UTIL_HPP

#include <vulkan/vulkan.hpp>

namespace me {

  static inline const char* get_vulkan_result_string(const VkResult result)
  {
#define ERRSTR(e) if (e == result) return #e;

    ERRSTR(VK_ERROR_OUT_OF_HOST_MEMORY)
    ERRSTR(VK_ERROR_OUT_OF_DEVICE_MEMORY)
    ERRSTR(VK_ERROR_INITIALIZATION_FAILED)
    ERRSTR(VK_ERROR_DEVICE_LOST)
    ERRSTR(VK_ERROR_MEMORY_MAP_FAILED)
    ERRSTR(VK_ERROR_LAYER_NOT_PRESENT)
    ERRSTR(VK_ERROR_EXTENSION_NOT_PRESENT)
    ERRSTR(VK_ERROR_FEATURE_NOT_PRESENT)
    ERRSTR(VK_ERROR_INCOMPATIBLE_DRIVER)
    ERRSTR(VK_ERROR_TOO_MANY_OBJECTS)
    ERRSTR(VK_ERROR_FORMAT_NOT_SUPPORTED)
    ERRSTR(VK_ERROR_FRAGMENTED_POOL)
    ERRSTR(VK_ERROR_OUT_OF_POOL_MEMORY)
    ERRSTR(VK_ERROR_SURFACE_LOST_KHR)
    ERRSTR(VK_ERROR_NATIVE_WINDOW_IN_USE_KHR)
    ERRSTR(VK_ERROR_OUT_OF_DATE_KHR)
    ERRSTR(VK_ERROR_INCOMPATIBLE_DISPLAY_KHR)
    ERRSTR(VK_ERROR_INVALID_SHADER_NV)
    ERRSTR(VK_ERROR_OUT_OF_POOL_MEMORY)
    ERRSTR(VK_ERROR_INVALID_EXTERNAL_HANDLE)
    ERRSTR(VK_ERROR_FRAGMENTATION)
    ERRSTR(VK_ERROR_INVALID_DEVICE_ADDRESS_EXT)
    ERRSTR(VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS)
    ERRSTR(VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT)
    ERRSTR(VK_ERROR_UNKNOWN)

#undef ERRSTR
    return nullptr;
  }

}

#endif
